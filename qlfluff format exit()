warning: in the working copy of '.gitignore', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/book_scooter_retention.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/companies.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/companies_trips.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/events_clean.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/events_clean_v2.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/events_full.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/events_prep.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/events_stream.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/finance/revenue_monthly.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/finance/revenue_monthly_report.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/finance/revenue_user_monthly.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/metricflow_time_spine.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/sex_age_pivot.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_daily.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_daily_stat.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_group.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_sex_daily.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_sex_monthly.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_age_sex_weekly.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_concurrency.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_geom.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_stat_daily.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/trips_users.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_class.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_class_monthly_trips.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_class_stat.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_class_weekly_destination_trips.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_class_weekly_trips.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'models/users_prep.sql', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'tests/events_full_is_complete.sql', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex c1c12b2..645058e 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -3,3 +3,5 @@[m [mtarget/[m
 dbt_packages/[m
 logs/[m
 profiles.yml[m
[32m+[m[32mscooters.duckdb[m
[32m+[m[32mrevenue_weather.csv[m
[1mdiff --git a/models/book_scooter_retention.sql b/models/book_scooter_retention.sql[m
[1mindex 68fb5aa..0e252c3 100644[m
[1m--- a/models/book_scooter_retention.sql[m
[1m+++ b/models/book_scooter_retention.sql[m
[36m@@ -2,4 +2,4 @@[m
   event_stream=ref("events_stream"),[m
   first_action="start_search",[m
   second_action="book_scooter"[m
[31m-)}}[m
\ No newline at end of file[m
[32m+[m[32m) }}[m
[1mdiff --git a/models/companies.sql b/models/companies.sql[m
[1mindex 931e59e..8ac163b 100644[m
[1m--- a/models/companies.sql[m
[1m+++ b/models/companies.sql[m
[36m@@ -1,3 +1,6 @@[m
[31m-select company, count(*) as models, sum(scooters) as scooters[m
[32m+[m[32mselect[m
[32m+[m[32m    company,[m
[32m+[m[32m    count(*) as models,[m
[32m+[m[32m    sum(scooters) as scooters[m
 from {{ ref("scooters") }}[m
 group by 1[m
[1mdiff --git a/models/companies_trips.sql b/models/companies_trips.sql[m
[1mindex 602c153..87eb4f4 100644[m
[1m--- a/models/companies_trips.sql[m
[1m+++ b/models/companies_trips.sql[m
[36m@@ -1,14 +1,17 @@[m
 with[m
[31m-    trips_cte as ([m
[31m-        select c.company, count(*) as trips[m
[31m-        from {{ ref("trips_prep") }} as tp[m
[31m-        join {{ ref("scooters") }} as c on tp.scooter_hw_id = c.hardware_id[m
[31m-        group by 1[m
[31m-    )[m
[32m+[m[32mtrips_cte as ([m
[32m+[m[32m    select[m
[32m+[m[32m        c.company,[m
[32m+[m[32m        count(*) as trips[m
[32m+[m[32m    from {{ ref("trips_prep") }} as tp[m
[32m+[m[32m    join {{ ref("scooters") }} as c on tp.scooter_hw_id = c.hardware_id[m
[32m+[m[32m    group by 1[m
[32m+[m[32m)[m
[32m+[m
 select[m
     company,[m
     t.trips,[m
     c.scooters,[m
     t.trips / cast(c.scooters as float) as trips_per_scooter[m
 from trips_cte t[m
[31m-join {{ ref("companies") }} as c using (company)[m
\ No newline at end of file[m
[32m+[m[32mjoin {{ ref("companies") }} as c using (company)[m
[1mdiff --git a/models/events_clean.sql b/models/events_clean.sql[m
[1mindex 3908fd6..7127d08 100644[m
[1m--- a/models/events_clean.sql[m
[1m+++ b/models/events_clean.sql[m
[36m@@ -1,14 +1,15 @@[m
 {% set date = var("date", none) %}[m
 [m
[31m-select distinct *,[m
[31m-  {{ updated_at() }}[m
[32m+[m[32mselect distinct[m
[32m+[m[32m    *,[m
[32m+[m[32m    {{ updated_at() }}[m
 from {{ source('scooters_raw', 'events') }}[m
 {% if is_incremental() %}[m
[31m-  {% if date %}[m
[32m+[m[32m    {% if date %}[m
   where date("timestamp") = date '{{ date }}'[m
   {% else %}  [m
[31m-  where "timestamp" > (select max("timestamp") from {{ this }})[m
[31m-  {% endif %}[m
[32m+[m[32m        where "timestamp" > (select max("timestamp") from {{ this }})[m
[32m+[m[32m    {% endif %}[m
 {% else %}[m
   where "timestamp" < date '2023-08-01'[m
[31m-{% endif %}[m
\ No newline at end of file[m
[32m+[m[32m{% endif %}[m
[1mdiff --git a/models/events_clean_v2.sql b/models/events_clean_v2.sql[m
[1mindex 5505462..488f102 100644[m
[1m--- a/models/events_clean_v2.sql[m
[1m+++ b/models/events_clean_v2.sql[m
[36m@@ -12,4 +12,4 @@[m [mwhere[m
         date=var('date', none),[m
         start_date=var('start_date', none),[m
         days_max=var('days_max', none)[m
[31m-    ) }}[m
\ No newline at end of file[m
[32m+[m[32m    ) }}[m
[1mdiff --git a/models/events_full.sql b/models/events_full.sql[m
[1mindex 1b08124..9331456 100644[m
[1m--- a/models/events_full.sql[m
[1m+++ b/models/events_full.sql[m
[36m@@ -1,5 +1,5 @@[m
[31m-select *,[m
[32m+[m[32mselect[m
[32m+[m[32m    *,[m
     date("timestamp") as "date"[m
 from {{ ref("events_clean") }} as ec[m
 left join {{ ref("event_types") }} as et using (type_id)[m
[31m-[m
[1mdiff --git a/models/events_prep.sql b/models/events_prep.sql[m
[1mindex d067099..0cc5e3d 100644[m
[1m--- a/models/events_prep.sql[m
[1m+++ b/models/events_prep.sql[m
[36m@@ -4,4 +4,4 @@[m [mselect[m
     type_id,[m
     date("timestamp") as "date"[m
 from[m
[31m-    {{ source("scooters_raw", "events") }}[m
\ No newline at end of file[m
[32m+[m[32m    {{ source("scooters_raw", "events") }}[m
[1mdiff --git a/models/events_stream.sql b/models/events_stream.sql[m
[1mindex d2d3048..84ab568 100644[m
[1m--- a/models/events_stream.sql[m
[1m+++ b/models/events_stream.sql[m
[36m@@ -3,4 +3,4 @@[m
     event_type_col="type",[m
     user_id_col="user_id",[m
     date_col='date("timestamp")'[m
[31m-) }}[m
\ No newline at end of file[m
[32m+[m[32m) }}[m
[1mdiff --git a/models/finance/revenue_monthly.sql b/models/finance/revenue_monthly.sql[m
[1mindex ca07b78..6938071 100644[m
[1m--- a/models/finance/revenue_monthly.sql[m
[1m+++ b/models/finance/revenue_monthly.sql[m
[36m@@ -1,11 +1,15 @@[m
 select[m
     "month",[m
     count(*) as users,[m
[31m-    percentile_cont(0.5) within group (order by revenue_total) as revenue_median,[m
[31m-    percentile_cont(0.95) within group (order by revenue_total) as revenue_95,[m
[32m+[m[32m    percentile_cont(0.5) within group ([m
[32m+[m[32m        order by revenue_total[m
[32m+[m[32m    ) as revenue_median,[m
[32m+[m[32m    percentile_cont(0.95) within group ([m
[32m+[m[32m        order by revenue_total[m
[32m+[m[32m    ) as revenue_95,[m
     max(revenue_total) as revenue_max,[m
     sum(revenue_total) as revenue_total[m
 from[m
     {{ ref('revenue_user_monthly') }}[m
 group by[m
[31m-    1[m
\ No newline at end of file[m
[32m+[m[32m    1[m
[1mdiff --git a/models/finance/revenue_monthly_report.sql b/models/finance/revenue_monthly_report.sql[m
[1mindex ea3040c..d63f287 100644[m
[1m--- a/models/finance/revenue_monthly_report.sql[m
[1m+++ b/models/finance/revenue_monthly_report.sql[m
[36m@@ -1,5 +1,4 @@[m
[31m-select[m
[31m-    *[m
[32m+[m[32mselect *[m
 from[m
     {{ ref("revenue_monthly") }}[m
 where[m
[36m@@ -9,4 +8,4 @@[m [mwhere[m
     {%- else -%}[m
         and "month" = (select min("month") from {{ ref("revenue_monthly") }})[m
     {% endif -%}[m
[31m-    and not(users < 1000 or revenue_median < 500)[m
\ No newline at end of file[m
[32m+[m[32m    and not (users < 1000 or revenue_median < 500)[m
[1mdiff --git a/models/finance/revenue_user_monthly.sql b/models/finance/revenue_user_monthly.sql[m
[1mindex 59a964d..06a13ac 100644[m
[1m--- a/models/finance/revenue_user_monthly.sql[m
[1m+++ b/models/finance/revenue_user_monthly.sql[m
[36m@@ -8,4 +8,4 @@[m [mwhere[m
     not is_free[m
 group by[m
     1,[m
[31m-    2[m
\ No newline at end of file[m
[32m+[m[32m    2[m
[1mdiff --git a/models/metricflow_time_spine.sql b/models/metricflow_time_spine.sql[m
[1mindex 0fa1e47..634b603 100644[m
[1m--- a/models/metricflow_time_spine.sql[m
[1m+++ b/models/metricflow_time_spine.sql[m
[36m@@ -3,11 +3,12 @@[m [mwith days as ([m
         'day',[m
         "date '2023-06-01'",[m
         "date '2023-08-31'"[m
[31m-    ) }}[m
[31m-),[m
[32m+[m[32m    ) }}),[m
[32m+[m
 final as ([m
     select cast(date_day as date) as date_day[m
     from days[m
 )[m
[32m+[m
 select *[m
[31m-from final[m
\ No newline at end of file[m
[32m+[m[32mfrom final[m
[1mdiff --git a/models/sex_age_pivot.sql b/models/sex_age_pivot.sql[m
[1mindex 46db862..e1d62ec 100644[m
[1m--- a/models/sex_age_pivot.sql[m
[1m+++ b/models/sex_age_pivot.sql[m
[36m@@ -1,9 +1,9 @@[m
 select[m
     age,[m
[31m-    {{dbt_utils.default__pivot("sex", ["M", "F"])}}[m
[32m+[m[32m    {{ dbt_utils.default__pivot("sex", ["M", "F"]) }}[m
 from[m
     {{ ref("trips_users") }}[m
 group by[m
     1[m
 order by[m
[31m-    1[m
\ No newline at end of file[m
[32m+[m[32m    1[m
[1mdiff --git a/models/trips_age_daily.sql b/models/trips_age_daily.sql[m
[1mindex 501b4d0..4b906d1 100644[m
[1m--- a/models/trips_age_daily.sql[m
[1m+++ b/models/trips_age_daily.sql[m
[36m@@ -1,3 +1,7 @@[m
[31m-select "date", age, count(*) as trips, sum(price_rub) as revenue_rub[m
[32m+[m[32mselect[m
[32m+[m[32m    "date",[m
[32m+[m[32m    age,[m
[32m+[m[32m    count(*) as trips,[m
[32m+[m[32m    sum(price_rub) as revenue_rub[m
 from {{ ref('trips_users') }}[m
 group by 1, 2[m
[1mdiff --git a/models/trips_age_daily_stat.sql b/models/trips_age_daily_stat.sql[m
[1mindex 04a7cdc..a0c000d 100644[m
[1m--- a/models/trips_age_daily_stat.sql[m
[1m+++ b/models/trips_age_daily_stat.sql[m
[36m@@ -1,4 +1,7 @@[m
[31m-select age, avg(trips) as avg_trips, avg(revenue_rub) as avg_revenue_rub[m
[32m+[m[32mselect[m
[32m+[m[32m    age,[m
[32m+[m[32m    avg(trips) as avg_trips,[m
[32m+[m[32m    avg(revenue_rub) as avg_revenue_rub[m
 from {{ ref("trips_age_daily") }}[m
 group by 1[m
 order by 1[m
[1mdiff --git a/models/trips_age_group.sql b/models/trips_age_group.sql[m
[1mindex 1be0410..2168952 100644[m
[1m--- a/models/trips_age_group.sql[m
[1m+++ b/models/trips_age_group.sql[m
[36m@@ -1,5 +1,8 @@[m
[31m-select ag.group as age_group, count(*), sum(price_rub) as revenue_rub[m
[32m+[m[32mselect[m
[32m+[m[32m    ag.group as age_group,[m
[32m+[m[32m    count(*),[m
[32m+[m[32m    sum(price_rub) as revenue_rub[m
 from {{ ref("trips_users") }} as tu[m
 cross join {{ ref("age_groups") }} as ag[m
 where tu.age >= ag.age_start and tu.age <= ag.age_end[m
[31m-group by ag.group[m
\ No newline at end of file[m
[32m+[m[32mgroup by ag.group[m
[1mdiff --git a/models/trips_age_sex_daily.sql b/models/trips_age_sex_daily.sql[m
[1mindex 4069f6c..05b35f0 100644[m
[1m--- a/models/trips_age_sex_daily.sql[m
[1m+++ b/models/trips_age_sex_daily.sql[m
[36m@@ -1 +1 @@[m
[31m-{{trips_age_sex_report( ref('trips_users'), 'daily')}}[m
\ No newline at end of file[m
[32m+[m[32m{{ trips_age_sex_report( ref('trips_users'), 'daily') }}[m
[1mdiff --git a/models/trips_age_sex_monthly.sql b/models/trips_age_sex_monthly.sql[m
[1mindex 3591023..a2a0f51 100644[m
[1m--- a/models/trips_age_sex_monthly.sql[m
[1m+++ b/models/trips_age_sex_monthly.sql[m
[36m@@ -1 +1 @@[m
[31m-{{trips_age_sex_report( ref('trips_users'), 'monthly')}}[m
\ No newline at end of file[m
[32m+[m[32m{{ trips_age_sex_report( ref('trips_users'), 'monthly') }}[m
[1mdiff --git a/models/trips_age_sex_weekly.sql b/models/trips_age_sex_weekly.sql[m
[1mindex ee55aac..e899082 100644[m
[1m--- a/models/trips_age_sex_weekly.sql[m
[1m+++ b/models/trips_age_sex_weekly.sql[m
[36m@@ -1 +1 @@[m
[31m-{{trips_age_sex_report( ref('trips_users'), 'weekly')}}[m
\ No newline at end of file[m
[32m+[m[32m{{ trips_age_sex_report( ref('trips_users'), 'weekly') }}[m
[1mdiff --git a/models/trips_concurrency.sql b/models/trips_concurrency.sql[m
[1mindex 4793ea5..3096333 100644[m
[1m--- a/models/trips_concurrency.sql[m
[1m+++ b/models/trips_concurrency.sql[m
[36m@@ -7,6 +7,7 @@[m [munnest_cte as ([m
     from[m
         {{ source("scooters_raw", "trips") }}[m
 ),[m
[32m+[m
 sum_cte as ([m
     -- Make timestamp unique, group increments, add initial concurrency from history[m
     select[m
[36m@@ -16,41 +17,45 @@[m [msum_cte as ([m
     from[m
         unnest_cte[m
     where[m
[31m-    {% if is_incremental() %}[m
[31m-        "timestamp" > (select max("timestamp") from {{ this }})[m
[31m-    {% else %}[m
[32m+[m[32m        {% if is_incremental() %}[m
[32m+[m[32m            "timestamp" > (select max("timestamp") from {{ this }})[m
[32m+[m[32m        {% else %}[m
         "timestamp" < (date '2023-06-01' + interval '7' hour) at time zone 'Europe/Moscow'[m
     {% endif %}[m
     group by[m
         1[m
     {% if is_incremental() %}[m
[31m-    union all[m
[31m-    select[m
[31m-        "timestamp",[m
[31m-        concurrency as increment,[m
[31m-        false as preserve_row[m
[31m-    from[m
[31m-        {{ this }}[m
[31m-    where[m
[31m-        "timestamp" = (select max("timestamp") from {{ this }})[m
[32m+[m[32m        union all[m
[32m+[m[32m        select[m
[32m+[m[32m            "timestamp",[m
[32m+[m[32m            concurrency as increment,[m
[32m+[m[32m            false as preserve_row[m
[32m+[m[32m        from[m
[32m+[m[32m            {{ this }}[m
[32m+[m[32m        where[m
[32m+[m[32m            "timestamp" = (select max("timestamp") from {{ this }})[m
     {% endif %}[m
 ),[m
[32m+[m
 cumsum_cte as ([m
     -- Integrate increment to get concurrency[m
     select[m
         "timestamp",[m
[31m-        sum(increment) over (order by "timestamp") as concurrency,[m
[32m+[m[32m        sum(increment) over ([m
[32m+[m[32m            order by "timestamp"[m
[32m+[m[32m        ) as concurrency,[m
         preserve_row[m
     from[m
         sum_cte[m
 )[m
[32m+[m
 select[m
     "timestamp",[m
     concurrency,[m
[31m-    {{updated_at()}}[m
[32m+[m[32m    {{ updated_at() }}[m
 from[m
     cumsum_cte[m
 where[m
     preserve_row[m
 order by[m
[31m-    1[m
\ No newline at end of file[m
[32m+[m[32m    1[m
[1mdiff --git a/models/trips_geom.sql b/models/trips_geom.sql[m
[1mindex 8938b5e..454aa4f 100644[m
[1m--- a/models/trips_geom.sql[m
[1m+++ b/models/trips_geom.sql[m
[36m@@ -3,4 +3,4 @@[m [mselect[m
     st_setsrid(st_makepoint(start_lon, start_lat), 4326) as start_point,[m
     st_setsrid(st_makepoint(finish_lon, finish_lat), 4326) as finish_point[m
 from[m
[31m-    {{ source('scooters_raw', 'trips') }}[m
\ No newline at end of file[m
[32m+[m[32m    {{ source('scooters_raw', 'trips') }}[m
[1mdiff --git a/models/trips_stat_daily.sql b/models/trips_stat_daily.sql[m
[1mindex 5beef4c..7b2db1f 100644[m
[1m--- a/models/trips_stat_daily.sql[m
[1m+++ b/models/trips_stat_daily.sql[m
[36m@@ -1,7 +1,8 @@[m
[31m-SELECT date(started_at) AS date,[m
[31m-count(*) AS trips,[m
[31m-max(price) / 100 AS max_price_rub,[m
[31m-avg(distance) / 1000 AS avg_distance_km [m
[31m-FROM scooters_raw.trips t [m
[31m-GROUP BY 1 [m
[31m-ORDER BY 1[m
\ No newline at end of file[m
[32m+[m[32mSELECT[m
[32m+[m[32m    date(started_at) AS date,[m
[32m+[m[32m    count(*) AS trips,[m
[32m+[m[32m    max(price) / 100 AS max_price_rub,[m
[32m+[m[32m    avg(distance) / 1000 AS avg_distance_km[m
[32m+[m[32mFROM scooters_raw.trips t[m
[32m+[m[32mGROUP BY 1[m
[32m+[m[32mORDER BY 1[m
[1mdiff --git a/models/trips_users.sql b/models/trips_users.sql[m
[1mindex f719973..5191e88 100644[m
[1m--- a/models/trips_users.sql[m
[1m+++ b/models/trips_users.sql[m
[36m@@ -2,13 +2,13 @@[m [mselect[m
     t.*,[m
     u.sex,[m
     extract(year from t.started_at) - extract(year from u.birth_date) as age,[m
[31m-    {{updated_at()}}[m
[32m+[m[32m    {{ updated_at() }}[m
 from {{ ref("trips_prep") }} t[m
 left join {{ source("scooters_raw", "users") }} u on t.user_id = u.id[m
 {% if is_incremental() %}[m
[31m-  where t.id > (select max(id) from {{ this }})[m
[31m-  order by 1[m
[31m-  limit 75000[m
[32m+[m[32m    where t.id > (select max(id) from {{ this }})[m
[32m+[m[32m    order by 1[m
[32m+[m[32m    limit 75000[m
 {% else %}[m
   where t.id <= 75000[m
[31m-{% endif %}[m
\ No newline at end of file[m
[32m+[m[32m{% endif %}[m
[1mdiff --git a/models/users_class.sql b/models/users_class.sql[m
[1mindex 1360805..1549e82 100644[m
[1m--- a/models/users_class.sql[m
[1m+++ b/models/users_class.sql[m
[36m@@ -4,12 +4,12 @@[m [mselect[m
     regular,[m
     rare,[m
     to_work,[m
[31m-    not (fan or regular or rare or to_work) as no_class[m
[32m+[m[32m    not(fan or regular or rare or to_work) as no_class[m
 from[m
     {{ ref('users_prep') }}[m
[31m-    full outer join {{ ref('users_class_monthly_trips') }}[m
[31m-        on user_id = id[m
[31m-    full outer join {{ ref('users_class_weekly_destination_trips') }}[m
[31m-        using (user_id)[